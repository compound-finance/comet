name: 'Run Scenarios'
on:
  workflow_dispatch:
  pull_request:
jobs:
  run-coverage:
    name: Run scenarios
    env:
      ETHERSCAN_KEY: ${{ secrets.ETHERSCAN_KEY }}
      SNOWTRACE_KEY: ${{ secrets.SNOWTRACE_KEY }}
      INFURA_KEY: ${{ secrets.INFURA_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: '16'

      - name: Cache Deployments
        uses: actions/cache@v2
        with:
          path: |
            deployments/*/contracts/*
            deployments/*/aliases.json
            deployments/*/proxies.json
            !deployments/hardhat
            !deployments/relations.ts
            !deployments/**/roots.json
            !deployments/**/relations.ts
            !deployments/**/configuration.json
            !deployments/**/migrations/*
          key: deployments-v4

      - name: Install packages
        run: yarn install --non-interactive --frozen-lockfile && yarn build

      - name: Compile
        run: npx hardhat compile

      - name: Run scenarios
        run: yarn scenario

      - uses: actions/upload-artifact@v2  # upload scenario results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: scenario-results
          path: scenario-results.json

      - uses: dorny/test-reporter@v1
        with:
          name: Scenario Tests              # Name of the check run which will be created
          path: 'scenario-results.json'     # Path to test results (inside artifact .zip)
          reporter: mocha-json              # Format of test results
